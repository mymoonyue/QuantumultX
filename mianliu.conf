#简易免流配置，需自行把国内的免流节点添加到“国内免流节点”策略组，将国外的免流节点添加到“国外免流节点”策略组

[general]
resource_parser_url=https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js
server_check_url=http://cp.cloudflare.com/generate_204
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com
excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32

# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct

# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=LINK_22E174, LINK_22E175

[dns]

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的 DNS 服务器。
;no-system

# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6

# 自定义 DNS
# > DNSPod Public DNS
server=119.29.29.29
# > Alibaba Public DNS
# server=223.5.5.5

# 在特定的网络环境下忽略自定义 DNS 可在后方加上「excluded_ssids」相关字段。
# 注意：如配置了 no-system，则请务必确保在忽略了部分自定义 DNS 的配置下至少有一个可用的自定义 DNS 配置。
# server=114.114.114.114, excluded_ssids=SSID1, SSID2

# DNS over HTTPS
# 当 DoH 服务器被设置时，所有其他普通的（没有与之相关的特定域）服务器将被忽略。
# 当设置了多个 DoH 服务器时，只有第一个会被使用。
# 当使用的 DoH 服务器不是基于 HTTP/2 时，DoH 将被暂时禁用，并使用常规服务器，直到下次启动 VPN 连接。
# 不建议在与防火墙相关的网络环境中使用，不确定 DoH 服务器是否总能被到达。
# 如果 DoH 服务器在您的国家或地区不是流行的 DNS 服务器，则不推荐使用，它可能会丢失 ISP DNS 服务器返回的 CDN 优化结果。
# 如果 DoH 服务器是一个反广告相关的服务器，则不推荐使用（Quantumult X 过滤模块对于被拒绝的域具有更好的性能，它可以避免客户端无休止的请求）。
;doh-server=https://dns.alidns.com/dns-query
;doh-server=https://223.6.6.6/dns-query

# 本地 DNS 映射
# Firebase Cloud Messaging
address=/mtalk.google.com/108.177.125.188
# Google Dl
server=/dl.google.com/119.29.29.29
server=/dl.l.google.com/119.29.29.29

;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]


[policy]

# 类型：静态(static)
# 指向您手动选择的候选服务器。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png

# 类型：可用(available)
# 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。
# 如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available=policy-name-2, Sample-A, Sample-B, Sample-C

# 类型：负载均衡(round-robin)
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C

# 类型：延迟测试(url-latency-benchmark)
# 策略指向具有最佳 URL 延迟(公差，单位毫秒)结果的服务器。
# 当用户在 Quantumult X 中手动启动 URL 测试时，策略结果也会被更新。
# 该类型的策略有一个名为 check-interval(秒) 的参数，如果此策略已经被任何请求激活，则将考虑该间隔。
;url-latency-benchmark=policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, tolerance=0

# SSID
# 策略根据网络环境的不同指向服务器。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# resource-tag-regex 及 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
;static=policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available=policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin=policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example

static=国内免流节点, 北京
static=国外免流节点, 香港01
static=Final, 国外免流节点, 国内免流节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png
static=Streaming, 国外免流节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Streaming.png
static=StreamingSE, 国内免流节点, 国外免流节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/StreamingSE.png
static=Guard, reject, 国内免流节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Hijacking.png

[server_remote]
#
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 86400 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
#

[filter_remote]

# Unbreak 后续规则修正
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list, tag=🔂Unbreak, force-policy=国内免流节点, update-interval=86400, opt-parser=true, enabled=true

# Advertising 广告
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list, tag=🛡Advertising, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/AdvertisingPlus.list#type=domain-set, tag=🛡Advertising+, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true

# Privacy 隐私
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Privacy.list, tag=🛡️Privacy, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true

# Hijacking 运营商劫持或恶意网站
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Hijacking.list, tag=🛡️Hijacking, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true

# Streaming 国际流媒体服务
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Streaming.list, tag=🎞Streaming, force-policy=Streaming, update-interval=86400, opt-parser=true, enabled=true

# StreamingSE 中国流媒体服务(面向海外版本)
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingSE.list, tag=🎞StreamingSE, force-policy=StreamingSE, update-interval=86400, opt-parser=true, enabled=true

# Global 全球加速
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list, tag=🇺🇳Global, force-policy=国外免流节点, update-interval=86400, opt-parser=true, enabled=true

# China 中国直连
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list, tag=🇨🇳China, force-policy=国内免流节点, update-interval=86400, opt-parser=true, enabled=true

# IPList for China
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/ChinaIP.list, tag=🇨🇳ChinaIP(与「geoip, cn, direct」二选一), force-policy=国内免流节点, update-interval=86400, opt-parser=true, enabled=true

[rewrite_remote]

# General
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=🔀General, update-interval=86400, enabled=true

# Block Advertising
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=🛡Block Advertising, update-interval=86400, enabled=true

# Block Advertising+
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/AdvertisingPlus.conf, tag=🛡Block Advertising+, update-interval=86400, enabled=true

# Block YouTube Ads
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=🛡YouTube Premium 禁用, update-interval=86400, enabled=false

[server_local]
shadowsocks=example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=北京
shadowsocks=example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=香港01

[filter_local]
host-suffix, local, 国内免流节点
ip-cidr, 192.168.0.0/16, 国内免流节点
ip-cidr, 10.0.0.0/8, 国内免流节点
ip-cidr, 172.16.0.0/12, 国内免流节点
ip-cidr, 127.0.0.0/8, 国内免流节点
ip-cidr, 100.64.0.0/10, 国内免流节点
ip-cidr, 224.0.0.0/4, 国内免流节点
ip6-cidr, fe80::/10, 国内免流节点

# GeoIP China(若启用，则禁用 ChinaIP.list)
-geoip, cn, 国内免流节点

final, Final

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

[task_local]
#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# [task_local] 完整示例请查看「示例」

[http_backend]
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# [http_backend] 完整示例请查看「示例」

[mitm]
;passphrase =
;p12 =
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com
